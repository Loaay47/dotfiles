#######################################################
##################### SETTINGS ########################
#######################################################

set icons
set period 1
set hidden false
set incsearch
set incfilter
#set ratios 1:1
set truncatechar "…"
set timefmt "02/01/2006 15:04:05 "
set infotimefmtnew '02/01 15:04'
set infotimefmtold '02/01/06'
set dircounts
set tabstop 4
set scrolloff 5
set wrapscroll
set shell "zsh"
set cursorpreviewfmt "\033[7m"
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'

set promptfmt "
\033[38;2;202;31;31;48;2;40;47;62m
\033[38;2;255;255;255m %w
\033[38;2;40;47;62;48;2;58;67;89m
\033[38;2;255;255;255m %f
\033[;38;2;58;67;89;49m\033[m"

set waitmsg "\033[1;31m⏎\033[m"
set errorfmt "\033[1;31m"
set numberfmt "\033[38;2;75;87;116m"

#######################################################
################## CUSTOM COMMANDS ####################
#######################################################

# ─── File Management ─────────────────────────────────
cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir "$ans"
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR "$ans"
}}

cmd unarchive ${{
  case "$f" in
    *.zip) unzip "$f" ;;
    *.rar) unrar x "$f" ;;
    *.tar.gz) tar -xzvf "$f" ;;
    *.tar.bz2) tar -xjvf "$f" ;;
    *.tar) tar -xvf "$f" ;;
    *.7z) 7z e "$f" ;;
    *) echo "Unsupported format" ;;
  esac
}}

# Trash bindings
cmd trash ${{
  files=$(printf "$fx" | tr '\n' ';')
  while [ "$files" ]; do
    file=${files%%;*}

    trash put "$(basename "$file")"
    if [ "$files" = "$file" ]; then
      files=''
    else
      files="${files#*;}"
    fi
  done
}}

cmd open &{{
  case $(file --mime-type -Lb "$f") in
    text/*) lf -remote "send $id \$nvim \$fx";;
    *) xdg-open "$f"
  esac
}}

# ─── Finder / Jump Commands ───────────────────────────
cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location')"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}
#map <c-f> :fzf_jump

cmd find ${{
  result="$(fd --hidden --exclude .git . | fzf --height 40% --reverse --no-multi)"
  [ -n "$result" ] && lf -remote "send $id select \"$result\""
}}


#######################################################
################### KEY BINDINGS ######################
#######################################################

# ─── Core Actions ─────────────────────────────────────
map c
map d
map m
map y
map <enter> open
map . set hidden!
map D trash
map u $trash restore -r 0
map dr $trash restore
map de $trash empty --all
map R reload
map C clear

# ─── File Creation ────────────────────────────────────
map mf mkfile
map md mkdir

# ─── Trash Management ─────────────────────────────────
map u $trash restore -r 0
map dr $trash restore
map de $trash empty --all

# ─── File Copy/Paste ──────────────────────────────────
map y
map m
map yy copy
map dd cut
map pp paste
map au unarchive

# ─── Clipboard Helpers ────────────────────────────────
map yp &{{ echo -n "$fx" | xclip -selection clipboard }}
map yd &{{ echo -n "$PWD" | xclip -selection clipboard }}
map yn &{{ echo -n "$(basename "$f")" | xclip -selection clipboard }}

# ─── Executable Toggle ────────────────────────────────
map =x $chmod +x "$f"
map -x $chmod -x "$f"

# ─── Fuzzy Finder / Jump ──────────────────────────────
#map <c-f> :fzf_jump
map f find

# ─── Open in Editor ───────────────────────────────────
map co $nvim "$f"

# ─── Directory Shortcuts ──────────────────────────────
map gh cd ~/
map gc cd /media/fun/_loaay_data/
map gd cd ~/Downloads
map gp cd ~/Pictures
map gr cd ~/repos
map gv cd ~/personal/courses/fun
map gt cd ~/.local/share/Trash/files
map g\; cd "/media/fun/_loaay_data/2. 2_level_sem2"

# ─── the F Shortcuts ──────────────────────────────
map <c-f>
map f1 $lf -remote "send $id select \"$(ffd -p --depth 1 +m)\""  # Fuzzy find 1 level deep
map f2 $lf -remote "send $id select \"$(ffd -p --depth 2 +m)\""  # Fuzzy find 2 levels deep
map f3 $lf -remote "send $id select \"$(ffd -p --depth 3 +m)\""  # Fuzzy find 3 levels deep
map F  $lf -remote "send $id select \"$(ffd -p +m)\""
map zf find
map zF find-back



